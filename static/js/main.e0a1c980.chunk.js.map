{"version":3,"sources":["api/index.js","components/404.js","context/PrismicContext.js","pages/LandingPage.js","pages/DynamicLandingPage.js","components/Router.js","components/DropDown.js","components/Languages.js","components/PrismicRefs.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["ref","lastFetch","_404","_ref","match","react_default","a","createElement","url","process","href","apiEndpoint","prism","prismic","api","cache","Map","defaultLocale","getByID","_callee","id","prismApi","regenerator_default","wrap","_context","prev","next","sent","abrupt","stop","this","getByUID","name","type","arguments","length","undefined","locale","Array","prototype","slice","call","queryPrismic","cacheId","concat","query","Predicates","at","options","lang","getBySlug","slug","_callee2","_ref$options","_ref2","results","doc","_context2","has","Promise","resolve","get","Object","objectSpread","primsicRefs","refs","resolvePageContent","console","log","set","_callee3","contentPromises","resolvedContent","_args3","_context3","data","isArray","content","map","content_link","then","linkedContent","prismicType","all","setRef","nextRef","reFetch","_lastFetch","_lastFetch2","slicedToArray","fn","args","apply","getApiInfo","fetch","resp","json","getPageByUID","getPageBySlug","PrismicContext","React","createContext","pathToUID","/","/contact/","/about/","toUID","path","Error","PrismicProvider","_React$Component","_getPrototypeOf2","_this","classCallCheck","_len","_key","possibleConstructorReturn","getPrototypeOf","state","languages","document","isLoading","status","currentRef","setPrismicRef","setState","fetchPageByUID","uid","handleResponse","setLocale","fetchPageForPath","fetchPageBySlug","pageUID","toConsumableArray","alternate_languages","inherits","createClass","key","value","_this2","apiInfo","find","isMasterRef","window","__getState","Provider","props","children","Component","LandingPage","_useContext","useContext","useEffect","meta_title","meta_description","className","Fragment","image","src","alt","style","maxWidth","Link","to","pages_DynamicLandingPage","params","_ref2$content","rest","objectWithoutProperties","metaInfo","entries","filter","_ref3","includes","section","title","_ref5","text","_ref6","_ref7","_ref8","term","definition","i18n","sv-se","en-us","routes","comp","Nav","NavLink","exact","activeClassName","Routes","Switch","Route","component","DynamicLandingPage","NotFound","DropDown","onSelect","list","selected","_useState","useState","_useState2","open","setOpen","disabled","onClick","label","flags","no","Languages","_ref$className","otherLanguages","loc","src_components_DropDown","PrismicRefs","otherRefs","_ref4","components_Header","Router_Nav","components_PrismicRefs","components_Languages","App","Router_Routes","Boolean","location","hostname","ReactDOM","render","PrismicContext_PrismicProvider","BrowserRouter","src_components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0a1c980.chunk.js","sourcesContent":["import prismic from 'prismic-javascript';\n\nconst apiEndpoint = 'https://hontas-test.prismic.io/api/v2';\nconst prism = prismic.api(apiEndpoint);\nlet ref;\nlet lastFetch;\n\nconst cache = new Map();\nconst defaultLocale = 'sv-se';\n\nasync function getByID(id) {\n  const prismApi = await prism;\n  return prismApi.getByID(id, { ref });\n}\n\nfunction getByUID(name, type = 'page', locale = defaultLocale) {\n  lastFetch = [getByUID, [...arguments]];\n  return queryPrismic({\n    cacheId: ref\n      ? `${ref}/${locale}/${type}-${name}`\n      : `${locale}/${type}-${name}`,\n    query: prismic.Predicates.at(`my.${type}.uid`, name),\n    options: { lang: locale, ref }\n  });\n}\n\nfunction getBySlug(slug, locale) {\n  lastFetch = [getBySlug, [...arguments]];\n  return queryPrismic({\n    cacheId: ref ? `${ref}/${slug}` : slug,\n    query: prismic.Predicates.at(`my.page.slug`, slug),\n    options: {\n      lang: locale || '*',\n      ref\n    }\n  });\n}\n\nasync function queryPrismic({ cacheId, query, options = {} }) {\n  if (cache.has(cacheId)) return Promise.resolve(cache.get(cacheId));\n  const prismApi = await prism;\n  const { results } = await prismApi.query(query, options);\n  const doc = results[0]\n    ? {\n        ...results[0],\n        primsicRefs: prismApi.refs\n      }\n    : undefined;\n  await resolvePageContent(doc);\n  console.log(cacheId, doc);\n  cache.set(cacheId, doc);\n  return doc;\n}\n\nasync function resolvePageContent(doc = {}) {\n  if (doc.data && Array.isArray(doc.data.content)) {\n    const contentPromises = doc.data.content.map((content) => {\n      if (!content.content_link) return content;\n      return getByID(content.content_link.id).then((linkedContent) => ({\n        ...linkedContent.data,\n        prismicType: linkedContent.type,\n        id: linkedContent.id\n      }));\n    });\n\n    const resolvedContent = await Promise.all(contentPromises);\n    doc.data.content = resolvedContent;\n  }\n  return doc;\n}\n\nexport default {\n  setRef: (nextRef) => {\n    ref = nextRef;\n  },\n  reFetch: () => {\n    const [fn, args] = lastFetch;\n    return fn.apply(null, args);\n  },\n  getApiInfo: () => fetch(apiEndpoint).then((resp) => resp.json()),\n  getPageByUID: (name, locale) => getByUID(name, 'page', locale),\n  getPageBySlug: (slug, locale) => getBySlug(slug, locale)\n};\n","import React from 'react';\n\nexport default ({ match }) => (\n  <div>\n    <h1>404 - Not Found</h1>\n    <p>\n      <small>\n        <code>{match.url}</code>\n      </small>\n    </p>\n    <code>process.env.PUBLIC_URL: {process.env.PUBLIC_URL}</code>\n    <a href=\"/\">Go to start page</a>\n  </div>\n);\n","import React from 'react';\nimport api from '../api';\n\nconst PrismicContext = React.createContext({});\nconst pathToUID = {\n  '/': 'home',\n  '/contact/': 'contact',\n  '/about/': 'about'\n};\nconst toUID = (path) => {\n  if (typeof pathToUID[path] === 'undefined')\n    throw Error(`Unhandled path '${path}'`);\n  return pathToUID[path];\n};\n\nexport class PrismicProvider extends React.Component {\n  state = {\n    languages: [],\n    locale: 'sv-se',\n    document: {},\n    isLoading: false,\n    status: 200,\n    refs: [],\n    currentRef: undefined\n  };\n\n  componentDidMount() {\n    api.getApiInfo().then((apiInfo) => {\n      console.log('apiInfo', apiInfo);\n      this.setState({\n        refs: apiInfo.refs,\n        currentRef: apiInfo.refs.find(({ isMasterRef }) => isMasterRef).ref\n      });\n    });\n    window.__getState = () => this.state;\n  }\n\n  setPrismicRef = (ref) => {\n    this.setState({ currentRef: ref });\n    api.setRef(ref);\n    if ((this.state.document, this.state.document.id)) {\n      this.fetchPageByUID(this.state.document.uid, this.state.locale);\n    } else {\n      api.reFetch().then(this.handleResponse);\n    }\n  };\n\n  setLocale = (locale) => {\n    this.setState({ locale });\n    this.fetchPageByUID(this.state.document.uid, locale, this.state.currentRef);\n  };\n\n  fetchPageForPath = (path) =>\n    this.fetchPageByUID(toUID(path), this.state.locale, this.state.currentRef);\n\n  fetchPageBySlug = (slug, locale, ref = this.state.currentRef) => {\n    this.setState({ isLoading: true });\n    return api.getPageBySlug(slug, locale, ref).then(this.handleResponse);\n  };\n\n  fetchPageByUID = (\n    pageUID,\n    locale = this.state.locale,\n    ref = this.state.currentRef\n  ) => {\n    this.setState({ isLoading: true });\n    return api.getPageByUID(pageUID, locale, ref).then(this.handleResponse);\n  };\n\n  handleResponse = (doc) => {\n    if (!doc) {\n      this.setState({\n        isLoading: false,\n        document: {},\n        status: 404\n      });\n    } else {\n      this.setState({\n        isLoading: false,\n        languages: [\n          doc.lang,\n          ...doc.alternate_languages.map(({ lang }) => lang)\n        ],\n        locale: doc.lang,\n        document: {\n          ...doc.data,\n          uid: doc.uid\n        },\n        status: 200\n      });\n    }\n  };\n\n  render() {\n    return (\n      <PrismicContext.Provider\n        value={{\n          ...this.state,\n          fetchPageForPath: this.fetchPageForPath,\n          fetchPageBySlug: this.fetchPageBySlug,\n          setPrismicRef: this.setPrismicRef,\n          setLocale: this.setLocale\n        }}\n      >\n        {this.props.children}\n      </PrismicContext.Provider>\n    );\n  }\n}\n\nexport default PrismicContext;\n","import React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PrismicContext from '../context/PrismicContext';\n\nexport default ({ match }) => {\n  const { document, locale, fetchPageForPath, isLoading } = useContext(\n    PrismicContext\n  );\n\n  useEffect(() => {\n    fetchPageForPath(match.path);\n  }, []);\n\n  if (isLoading)\n    return (\n      <p>{locale === 'sv-se' ? 'Laddar innehåll...' : 'Loading content...'}</p>\n    );\n\n  const { meta_title, meta_description, slug } = document || {};\n\n  return (\n    <main className=\"App-content\">\n      <>\n        <h1>{meta_title}</h1>\n        <p>{`${locale}/${slug}`}</p>\n        <p>{meta_description}</p>\n        <code>process.env.PUBLIC_URL: {process.env.PUBLIC_URL}</code>\n        {document.image && (\n          <img\n            src={document.image.url}\n            alt={document.image.alt}\n            style={{ maxWidth: '35vw' }}\n          />\n        )}\n        <h3>Dynamiska sidor</h3>\n        Publicerad:\n        <Link to=\"kampanj/loans-with-market-leading-interest\">\n          kampanj/loans-with-market-leading-interest\n        </Link>\n        <br />\n        EJ publicerad:\n        <Link to=\"kampanj/lan-med-marknadsledande-ranta\">\n          kampanj/lan-med-marknadsledande-ranta\n        </Link>\n      </>\n    </main>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\n\nimport NotFound from '../components/404';\nimport PrismicContext from '../context/PrismicContext';\nimport './DynamicLandingPage.css';\n\nexport default ({ match }) => {\n  const { document, locale, fetchPageBySlug, isLoading, status } = useContext(\n    PrismicContext\n  );\n\n  useEffect(() => {\n    fetchPageBySlug(match.params.slug);\n  }, []);\n\n  if (isLoading) {\n    return (\n      <p>{locale === 'sv-se' ? 'Laddar innehåll...' : 'Loading content...'}</p>\n    );\n  }\n\n  if (status === 404) return <NotFound match={match} />;\n\n  const { slug, content = [], ...rest } = document || {};\n  const metaInfo = Object.entries(rest).filter(([key]) => key.includes('meta'));\n\n  return (\n    <div className=\"DynamicLandingPage\">\n      {content.map((section) => (\n        <section key={section.id}>\n          <h2>{section.title.map(({ text }) => text)}</h2>\n          <p>{section.text.map(({ text }) => text)}</p>\n          <img\n            src={section.image.url}\n            alt={section.image.alt}\n            className=\"DynamicLandingPage__image\"\n          />\n        </section>\n      ))}\n      <div className=\"DynamicLandingPage__meta\">\n        <dl>\n          {metaInfo.map(([term, definition]) => (\n            <div key={term}>\n              <dt>{term}</dt>\n              <dd>{definition}</dd>\n            </div>\n          ))}\n        </dl>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nimport NotFound from './404';\nimport PrismicContext from '../context/PrismicContext';\nimport LandingPage from '../pages/LandingPage';\nimport DynamicLandingPage from '../pages/DynamicLandingPage';\n\nimport './Router.css';\n\nconst i18n = {\n  'sv-se': {\n    '/': 'Hem',\n    '/about/': 'Om',\n    '/contact/': 'Kontakt'\n  },\n  'en-us': {\n    '/': 'Home',\n    '/about/': 'About',\n    '/contact/': 'Contact'\n  }\n};\n\nexport const routes = [\n  {\n    path: '/',\n    comp: LandingPage\n  },\n  {\n    path: '/about/',\n    comp: LandingPage\n  },\n  {\n    path: '/contact/',\n    comp: LandingPage\n  }\n];\n\nexport const Nav = () => {\n  const { locale } = useContext(PrismicContext);\n  return (\n    <nav>\n      <ul className=\"Router__navList\">\n        {routes.map(({ path, text }) => (\n          <li key={path}>\n            <NavLink\n              to={path}\n              exact\n              className=\"Router__navList__link\"\n              activeClassName=\"Router__navList__link--active\"\n            >\n              {i18n[locale][path]}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport const Routes = () => (\n  <Switch>\n    {routes.map(({ path, comp, exact }) => (\n      <Route path={path} exact component={comp} key={path} />\n    ))}\n    <Route path=\"/kampanj/:slug\" component={DynamicLandingPage} />\n    <Route component={NotFound} />\n  </Switch>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './DropDown.css';\n\nconst DropDown = ({ onSelect, list, selected }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"DropDown\">\n      <button\n        className=\"DropDown__toggle-btn\"\n        disabled={list.length < 1}\n        onClick={() => setOpen(!open)}\n      >\n        {selected || ' '}\n      </button>\n      <div\n        className={`DropDown__dropdown ${\n          open ? 'DropDown__dropdown--is-open' : ''\n        }`}\n      >\n        {list.map(({ id, label }) => (\n          <button\n            key={id}\n            className=\"DropDown__dropdown-btn\"\n            onClick={() => {\n              onSelect(id);\n              setOpen(false);\n            }}\n          >\n            {label}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nDropDown.propTypes = {\n  label: PropTypes.string,\n  onSelect: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  selected: PropTypes.string\n};\n\nexport default DropDown;\n","import React, { useContext } from 'react';\nimport PrismicContext from '../context/PrismicContext';\nimport DropDown from './DropDown';\n\nconst flags = {\n  'en-us': '🇺🇸',\n  'sv-se': '🇸🇪',\n  no: '🇳🇴'\n};\n\nfunction Languages({ className = '' }) {\n  const { languages, locale, setLocale } = useContext(PrismicContext);\n  const otherLanguages = languages\n    .filter((lang) => lang !== locale)\n    .map((loc) => ({ id: loc, label: flags[loc] }));\n\n  return (\n    <div className={`Languages ${className}`}>\n      <DropDown\n        list={otherLanguages}\n        selected={flags[locale]}\n        onSelect={setLocale}\n      />\n    </div>\n  );\n}\n\nexport default Languages;\n","import React, { useContext } from 'react';\nimport PrismicContext from '../context/PrismicContext';\nimport DropDown from './DropDown';\n\nfunction PrismicRefs({ className = '' }) {\n  const { refs, currentRef, setPrismicRef } = useContext(PrismicContext);\n  const selected = refs.find(({ ref }) => ref === currentRef) || {};\n  const otherRefs = refs\n    .filter(({ ref }) => ref !== currentRef)\n    .map(({ ref, label }) => ({ id: ref, label }));\n\n  return (\n    <div className={`PrismicRefs ${className}`}>\n      Prismic ref:{' '}\n      <DropDown\n        list={otherRefs}\n        selected={selected.label}\n        onSelect={setPrismicRef}\n      />\n    </div>\n  );\n}\n\nexport default PrismicRefs;\n","import React from 'react';\n\nimport * as Router from './Router';\nimport Languages from './Languages';\nimport PrismicRefs from './PrismicRefs';\n\nimport './Header.css';\n\nexport default () => (\n  <header className=\"Header\">\n    <Router.Nav />\n    <PrismicRefs className=\"Header__refs\" />\n    <Languages className=\"Header__lang\" />\n  </header>\n);\n","import React from 'react';\nimport * as Router from './Router';\nimport Header from './Header';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"App-content\">\n        <Router.Routes />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/App';\nimport { PrismicProvider } from './context/PrismicContext';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(\n  <PrismicProvider>\n    <Router>\n      <App />\n    </Router>\n  </PrismicProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}